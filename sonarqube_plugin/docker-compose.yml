version: '3.8'

services:
  sonarqube:
    build:
      context: .
      args:
        - SONAR_BRANCH_PLUGIN_VERSION=${SONAR_BRANCH_PLUGIN_VERSION}
    image: sonarqube-with-branch-plugin:${SONARQUBE_VERSION}
    depends_on:
      - db
    environment:
      SONAR_JDBC_URL: ${SONAR_JDBC_URL}
      SONAR_JDBC_USERNAME: ${SONAR_JDBC_USERNAME}
      SONAR_JDBC_PASSWORD: ${SONAR_JDBC_PASSWORD}
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    networks:
      - sonarnet
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarqube.rule=Host(`${SONAR_HOST}`)"
      - "traefik.http.routers.sonarqube.entrypoints=${TRAEFIK_ENTRYPOINT}"
      - "traefik.http.services.sonarqube.loadbalancer.server.port=9000"
      - "traefik.docker.network=web"

  db:
    image: postgres:13
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgresql_data:/var/lib/postgresql/data
    networks:
      - sonarnet

networks:
  sonarnet:
    driver: bridge
  web:
    external: true

volumes:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  postgresql_data: